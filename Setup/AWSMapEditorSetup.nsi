; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "Advance Wars Series Map Editor"
!define PRODUCT_VERSION "1.0"
!define PRODUCT_WEB_SITE "http://mapeditor.hopto.org"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\AWSMapEditor.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

; MUI 1.67 compatible ------
!include "MUI.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install-blue-full.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall-blue-full.ico"

; Language Selection Dialog Settings
!define MUI_LANGDLL_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_LANGDLL_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_LANGDLL_REGISTRY_VALUENAME "NSIS:Language"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; Components page
!insertmacro MUI_PAGE_COMPONENTS
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!define MUI_FINISHPAGE_RUN "$INSTDIR\AWSMapEditor.exe"
!define MUI_FINISHPAGE_SHOWREADME "$INSTDIR\ReadMe.txt"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "Dutch"
!insertmacro MUI_LANGUAGE "PortugueseBR"
!insertmacro MUI_LANGUAGE "Spanish"


; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "AWSMapEditorSetup.exe"
InstallDir "$PROGRAMFILES\AWSMapEditor"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show

Function .onInit
  !insertmacro MUI_LANGDLL_DISPLAY
FunctionEnd

Section "Application" SEC01
  SectionIn RO
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  File "ReadMe.txt"
  File "AWSMapEditor.exe"
  CreateDirectory "$SMPROGRAMS\AWS Map Editor"
  CreateShortCut "$SMPROGRAMS\AWS Map Editor\AWSMapEditor.lnk" "$INSTDIR\AWSMapEditor.exe"
  CreateShortCut "$DESKTOP\AWSMapEditor.lnk" "$INSTDIR\AWSMapEditor.exe"
  ; back up old value of .awm
!define Index "Line${__LINE__}"
  ReadRegStr $1 HKCR ".awm" ""
  StrCmp $1 "" "${Index}-NoBackup"
    StrCmp $1 "AWSMapEditor.AW1Map" "${Index}-NoBackup"
    WriteRegStr HKCR ".awm" "backup_val" $1
"${Index}-NoBackup:"
  WriteRegStr HKCR ".awm" "" "AWSMapEditor.AW1Map"
  ReadRegStr $0 HKCR "AWSMapEditor.AW1Map" ""
  StrCmp $0 "" 0 "${Index}-Skip"
	WriteRegStr HKCR "AWSMapEditor.AW1Map" "" "Advance Wars Map"
	WriteRegStr HKCR "AWSMapEditor.AW1Map\shell" "" "open"
	WriteRegStr HKCR "AWSMapEditor.AW1Map\DefaultIcon" "" "$INSTDIR\AWSMapEditor.exe,1"
"${Index}-Skip:"
  WriteRegStr HKCR "AWSMapEditor.AW1Map\shell\open\command" "" \
    '$INSTDIR\AWSMapEditor.exe "%1"'
  System::Call 'Shell32::SHChangeNotify(i 0x8000000, i 0, i 0, i 0)'
!undef Index
  ; back up old value of .aw2
!define Index "Line${__LINE__}"
  ReadRegStr $1 HKCR ".aw2" ""
  StrCmp $1 "" "${Index}-NoBackup"
    StrCmp $1 "AWSMapEditor.AW2Map" "${Index}-NoBackup"
    WriteRegStr HKCR ".aw2" "backup_val" $1
"${Index}-NoBackup:"
  WriteRegStr HKCR ".aw2" "" "AWSMapEditor.AW2Map"
  ReadRegStr $0 HKCR "AWSMapEditor.AW2Map" ""
  StrCmp $0 "" 0 "${Index}-Skip"
	WriteRegStr HKCR "AWSMapEditor.AW2Map" "" "Advance Wars 2 Map"
	WriteRegStr HKCR "AWSMapEditor.AW2Map\shell" "" "open"
	WriteRegStr HKCR "AWSMapEditor.AW2Map\DefaultIcon" "" "$INSTDIR\AWSMapEditor.exe,1"
"${Index}-Skip:"
  WriteRegStr HKCR "AWSMapEditor.AW2Map\shell\open\command" "" \
    '$INSTDIR\AWSMapEditor.exe "%1"'
  System::Call 'Shell32::SHChangeNotify(i 0x8000000, i 0, i 0, i 0)'
!undef Index
  ; back up old value of .awd
!define Index "Line${__LINE__}"
  ReadRegStr $1 HKCR ".awd" ""
  StrCmp $1 "" "${Index}-NoBackup"
    StrCmp $1 "AWSMapEditor.AWDSMap" "${Index}-NoBackup"
    WriteRegStr HKCR ".awd" "backup_val" $1
"${Index}-NoBackup:"
  WriteRegStr HKCR ".awd" "" "AWSMapEditor.AWDSMap"
  ReadRegStr $0 HKCR "AWSMapEditor.AWDSMap" ""
  StrCmp $0 "" 0 "${Index}-Skip"
	WriteRegStr HKCR "AWSMapEditor.AWDSMap" "" "Advance Wars DS Map"
	WriteRegStr HKCR "AWSMapEditor.AWDSMap\shell" "" "open"
	WriteRegStr HKCR "AWSMapEditor.AWDSMap\DefaultIcon" "" "$INSTDIR\AWSMapEditor.exe,1"
"${Index}-Skip:"
  WriteRegStr HKCR "AWSMapEditor.AWDSMap\shell\open\command" "" \
    '$INSTDIR\AWSMapEditor.exe "%1"'
  System::Call 'Shell32::SHChangeNotify(i 0x8000000, i 0, i 0, i 0)'
!undef Index
  ; back up old value of .aws
!define Index "Line${__LINE__}"
  ReadRegStr $1 HKCR ".aws" ""
  StrCmp $1 "" "${Index}-NoBackup"
    StrCmp $1 "AWSMapEditor.AWSMap" "${Index}-NoBackup"
    WriteRegStr HKCR ".aws" "backup_val" $1
"${Index}-NoBackup:"
  WriteRegStr HKCR ".aws" "" "AWSMapEditor.AWSMap"
  ReadRegStr $0 HKCR "AWSMapEditor.AWSMap" ""
  StrCmp $0 "" 0 "${Index}-Skip"
	WriteRegStr HKCR "AWSMapEditor.AWSMap" "" "Advance Wars Series Map"
	WriteRegStr HKCR "AWSMapEditor.AWSMap\shell" "" "open"
	WriteRegStr HKCR "AWSMapEditor.AWSMap\DefaultIcon" "" "$INSTDIR\AWSMapEditor.exe,1"
"${Index}-Skip:"
  WriteRegStr HKCR "AWSMapEditor.AWSMap\shell\open\command" "" \
    '$INSTDIR\AWSMapEditor.exe "%1"'
  System::Call 'Shell32::SHChangeNotify(i 0x8000000, i 0, i 0, i 0)'
!undef Index
SectionEnd

Section "Samples" SEC02
  SetOutPath "$INSTDIR\Samples"
  File "Samples\Trapped.aws"
  File "Samples\Spanned Island.aws"
  File "Samples\Ripple Wave.aws"
  File "Samples\Meridian.aws"
  File "Samples\Wrench Island.awm"
  File "Samples\Spann Island.awm"
  File "Samples\Road-Block.awm"
  File "Samples\Butterfly Island.awm"
  File "Samples\Red Sand Desert.awd"
  File "Samples\Devil Lake DS.awd"
  File "Samples\Devil Lake.awd"
  File "Samples\Triple Front.aw2"
  File "Samples\The Circle.aw2"
  File "Samples\Black Hole.aw2"
SectionEnd

Section "Music" SEC03
  SetOutPath "$INSTDIR"
  File "bgm.mp3"
SectionEnd

Section -AdditionalIcons
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateShortCut "$SMPROGRAMS\AWS Map Editor\Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\AWS Map Editor\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\AWSMapEditor.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\AWSMapEditor.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
SectionEnd

; Section descriptions
!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC01} "The map editor application. Must be installed."
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC02} "Various map samples."
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC03} "Background music that may be played in the editor."
!insertmacro MUI_FUNCTION_DESCRIPTION_END

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) has been successfully removed from your computer."
FunctionEnd

Function un.onInit
!insertmacro MUI_UNGETLANGUAGE
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  Delete "$INSTDIR\${PRODUCT_NAME}.url"
  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\bgm.mp3"
  Delete "$INSTDIR\Samples\Black Hole.aw2"
  Delete "$INSTDIR\Samples\The Circle.aw2"
  Delete "$INSTDIR\Samples\Triple Front.aw2"
  Delete "$INSTDIR\Samples\Devil Lake.awd"
  Delete "$INSTDIR\Samples\Devil Lake DS.awd"
  Delete "$INSTDIR\Samples\Red Sand Desert.awd"
  Delete "$INSTDIR\Samples\Butterfly Island.awm"
  Delete "$INSTDIR\Samples\Road-Block.awm"
  Delete "$INSTDIR\Samples\Spann Island.awm"
  Delete "$INSTDIR\Samples\Wrench Island.awm"
  Delete "$INSTDIR\Samples\Meridian.aws"
  Delete "$INSTDIR\Samples\Ripple Wave.aws"
  Delete "$INSTDIR\Samples\Spanned Island.aws"
  Delete "$INSTDIR\Samples\Trapped.aws"
  Delete "$INSTDIR\AWSMapEditor.exe"
  Delete "$INSTDIR\AWSMapEditor.ini"
  Delete "$INSTDIR\ReadMe.txt"

  Delete "$SMPROGRAMS\AWS Map Editor\Uninstall.lnk"
  Delete "$SMPROGRAMS\AWS Map Editor\Website.lnk"
  Delete "$DESKTOP\AWSMapEditor.lnk"
  Delete "$SMPROGRAMS\AWS Map Editor\AWSMapEditor.lnk"

  RMDir "$SMPROGRAMS\AWS Map Editor"
  RMDir "$INSTDIR\Samples"
  RMDir "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"

  ;start of restore script
!define Index "Line${__LINE__}"
  ReadRegStr $1 HKCR ".awm" ""
  StrCmp $1 "AWSMapEditor.AW1Map" 0 "${Index}-NoOwn" ; only do this if we own it
    ReadRegStr $1 HKCR ".awm" "backup_val"
    StrCmp $1 "" 0 "${Index}-Restore" ; if backup="" then delete the whole key
      DeleteRegKey HKCR ".awm"
    Goto "${Index}-NoOwn"
"${Index}-Restore:"
      WriteRegStr HKCR ".awm" "" $1
      DeleteRegValue HKCR ".awm" "backup_val"
    DeleteRegKey HKCR "AWSMapEditor.AW1Map" ;Delete key with association settings
    System::Call 'Shell32::SHChangeNotify(i 0x8000000, i 0, i 0, i 0)'
"${Index}-NoOwn:"
!undef Index
!define Index "Line${__LINE__}"
  ReadRegStr $1 HKCR ".aw2" ""
  StrCmp $1 "AWSMapEditor.AW2Map" 0 "${Index}-NoOwn" ; only do this if we own it
    ReadRegStr $1 HKCR ".aw2" "backup_val"
    StrCmp $1 "" 0 "${Index}-Restore" ; if backup="" then delete the whole key
      DeleteRegKey HKCR ".aw2"
    Goto "${Index}-NoOwn"
"${Index}-Restore:"
      WriteRegStr HKCR ".aw2" "" $1
      DeleteRegValue HKCR ".aw2" "backup_val"
    DeleteRegKey HKCR "AWSMapEditor.AW2Map" ;Delete key with association settings
    System::Call 'Shell32::SHChangeNotify(i 0x8000000, i 0, i 0, i 0)'
"${Index}-NoOwn:"
!undef Index
!define Index "Line${__LINE__}"
  ReadRegStr $1 HKCR ".awd" ""
  StrCmp $1 "AWSMapEditor.AWDSMap" 0 "${Index}-NoOwn" ; only do this if we own it
    ReadRegStr $1 HKCR ".awd" "backup_val"
    StrCmp $1 "" 0 "${Index}-Restore" ; if backup="" then delete the whole key
      DeleteRegKey HKCR ".awd"
    Goto "${Index}-NoOwn"
"${Index}-Restore:"
      WriteRegStr HKCR ".awdt" "" $1
      DeleteRegValue HKCR ".awd" "backup_val"
    DeleteRegKey HKCR "AWSMapEditor.AWDSMap" ;Delete key with association settings
    System::Call 'Shell32::SHChangeNotify(i 0x8000000, i 0, i 0, i 0)'
"${Index}-NoOwn:"
!undef Index
!define Index "Line${__LINE__}"
  ReadRegStr $1 HKCR ".aws" ""
  StrCmp $1 "AWSMapEditor.AWSMap" 0 "${Index}-NoOwn" ; only do this if we own it
    ReadRegStr $1 HKCR ".aws" "backup_val"
    StrCmp $1 "" 0 "${Index}-Restore" ; if backup="" then delete the whole key
      DeleteRegKey HKCR ".aws"
    Goto "${Index}-NoOwn"
"${Index}-Restore:"
      WriteRegStr HKCR ".aws" "" $1
      DeleteRegValue HKCR ".aws" "backup_val"
    DeleteRegKey HKCR "AWSMapEditor.AWSMap" ;Delete key with association settings
    System::Call 'Shell32::SHChangeNotify(i 0x8000000, i 0, i 0, i 0)'
"${Index}-NoOwn:"
!undef Index

  SetAutoClose true
SectionEnd